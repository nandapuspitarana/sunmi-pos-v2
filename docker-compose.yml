version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: sunmi-pos-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: sunmi_pos
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: sunmi-pos-backend
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/sunmi_pos
      # Note: Host machine connects via port 5433, but inside Docker network it's still 5432
      - JWT_SECRET=your_jwt_secret_here
      - SOCKET_CORS_ORIGIN=http://localhost:5173
    ports:
      - "3001:3001"
    volumes:
      - ./api:/app/api
      - ./uploads:/app/uploads
      - node_modules_backend:/app/node_modules

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: sunmi-pos-frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://localhost:3001
    ports:
      - "5173:5173"
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - node_modules_frontend:/app/node_modules

volumes:
  postgres_data:
    driver: local
  node_modules_backend:
    driver: local
  node_modules_frontend:
    driver: local